********************************************************************************
Network sparsification via Maximum Spanning "Trees" 

Input data: 
  redes/all_1

To compute the Maximum Spanning Tree (MST) of a network of $n$ nodes, the wedges (weighted edges) are listed and then sorted in decreasing order of strength (absolute value of the weight) [1]. Then, one by one, they are incorporated to a new network of $n$ nodes until the new network achieves one component of $n$ nodes. The process begins with $n$ connected components composed of $n$ isolated nodes. As links are incorporated to the network, these components tend to merge with each other until one connected component emerges. As it is up to this point, the connected component generated by this process is not necessarily a tree. To force the process to generate a tree, the incorporation of a link is discarded if it connects two nodes already in the same connected component. By doint this, the generation of loops is avoided, because the accepted links only connect disconnected components.

Note that, in the title, we use the word "Tree" between quotes. This is because we are using the version of the process that accepts loops and, therefore, it does not necessarily generates a tree. We made this choice because the results look better. We may change this choice in the future if we like.

[1] Actually, the standard definition is Minimum Spanning Tree because the weighted edges are sorted in increasing order of "cost", since the usual goal is the identification of the spanning tree that reduces the sum of the costs of its links.
********************************************************************************
2025-10-31
Redo the experiment but using the all_2 dataset.
********************************************************************************
